{"version":3,"sources":["main/js/application/AmountFormatter.js","main/js/application/components/AmountInput.js","main/js/application/components/ExpenseForm.js","main/js/domain/Expense.js","main/js/domain/UUIDGenerator.js","main/js/domain/AmountSpent.js","main/js/domain/ExpenseRepository.js","main/js/domain/MonthlyBudget.js","main/js/domain/CategoryBudget.js","main/js/domain/BudgetRepository.js","main/js/application/components/ExpenseHistory.js","main/js/domain/Category.js","main/js/domain/CategoryRepository.js","main/js/domain/AutoIncrementIdGenerator.js","main/js/application/components/ExpensesDash.js","main/js/application/components/BudgetDash.js","main/js/application/components/MonthSelector.js","main/js/application/components/AdminDash.js","main/js/application/components/App.js","main/js/registerServiceWorker.js","index.js"],"names":["AmountFormatter","decimalSeparator","arguments","length","undefined","Object","classCallCheck","this","inputDigits","cents","formattedCents","centsPart","substring","unitsPart","concat","missingDigits","toConsumableArray","Array","keys","reduce","v","parseInt","digit","amountCents","formatter","value","toString","i","keyDown","charAt","clear","AmountInput","props","_this","possibleConstructorReturn","getPrototypeOf","call","amountFormatter","fromCents","initialValue","_amount","state","formattedValue","formatted","event","key","preventDefault","keyCode","charCodeAt","isBackspace","isDigit","backspace","String","fromCharCode","onDigit","onAmountChanged","valueCents","setState","_this2","react_default","a","createElement","type","className","inputClass","name","onChange","onKeyDown","amountChanged","bind","ref","node","Component","defaultProps","console","warn","ExpenseForm","_validationMessages","amount","empty","target","categorySelected","categories","filter","c","id","category","onSubmit","validationErrors","push","where","onValidationError","_category","_comment","objectSpread","_this3","map","index","components_AmountInput","clearErrors","defaultValue","comment","formSubmitted","onClick","_submit","e","submit","toLocaleString","Expense","parameters","dateProvider","moment","categoryId","deleted","now","date","day","month","year","hour","minute","units","yearMonth","getDateMoment","format","fmtDate","obj","expense","UUIDGenerator","uuid","currentDateProvider","AmountSpent","spentPreviousMonth","_dateProvider","projected","_calculateProjection","rate","_calculateSpentRateVsPreviousMonth","today","endOfMonth","endOf","Math","round","ExpenseRepository","localStorage","listAll","_getExpenseKeys","getItem","JSON","parse","fromJsonObj","sort","b","diff","arrayJson","nummusPrefix","expenseKeys","setItem","stringify","removeItem","savedKey","previousMonthAmounts","_amountsByCategory","previousMonth","Map","from","_ref","_ref2","slicedToArray","get","list","sameMonth","currentAmount","set","jsonString","forEach","hardDelete","add","yearMonthMoment","toMoment","expenseDate","next","apiKey","MonthlyBudget","categoryBudgets","CategoryBudget","budgeted","floor","BudgetRepository","categoryRepository","_localStorage","_categoryRepository","_initializeBudgets","_now","_findOrCreate","listMonths","m","found","budget","_parseObject","assign","fromCategory","newBudget","monthlyBudget","k","startsWith","YearMonth","month1","month2","reverse","is_current","subtract","_class","ExpenseHistory","expenses","showCsv","categoriesById","formattedAmount","formattedDate","deleteExpense","rows","makeItem","expensesAsCsv","expenseRepository","delete","findBy","selectedMonth","_this4","tags","join","Category","CategoryRepository","localeCompare","AutoIncrementIdGenerator","ExpensesDash","components_ExpenseForm","expenseAdded","components_ExpenseHistory","_expenseHistory","nextId","idGenerator","createFromState","BudgetEntry","amountSpent","percentage","categoryName","BudgetDash","totalAmountSpent","_getAmountSpent","acc","tbody","_ref3","_ref4","BudgetDash_BudgetEntry","amountSpentByCategory","MonthSelector","onMonthChanged","budgetRepository","findMonth","months","currentMonth","options","monthChanged","API_ENDPOINT","AdminDash","dump","loading","uploadCompleted","userUuid","loadDump","saveApiKey","setUserUuid","component","fetch","method","mode","headers","X-Api-Key","body","then","response","json","rawJson","reason","uploadFailed","downloadCompleted","uploadExpenses","htmlFor","placeholder","apiKeyChanged","uuidChanged","textAreaChanged","categoryBudget","remainingAmounts","App","components_ExpensesDash","components_BudgetDash","amountsByCategory","components_AdminDash","BrowserRouter","data-dropdown-menu","Link","to","components_MonthSelector","Route","exact","path","makeExpensesDash","makeBudgetDash","makeAdminDash","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","catch","error","ReactDOM","render","components_App","document","getElementById","addEventListener","platforms","userChoice","outcome","URL","process","origin","status","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.2f1a9063.chunk.js","sourcesContent":["\nclass AmountFormatter {\n\n  constructor(decimalSeparator = \".\") {\n    this.decimalSeparator = decimalSeparator;\n    this.inputDigits = '';\n  }\n\n  formatted() {\n    const cents = this.formattedCents();\n\n    let centsPart = cents.substring(cents.length - 2, cents.length);\n    let unitsPart = cents.substring(0, cents.length - 2);\n    return `${unitsPart}${this.decimalSeparator}${centsPart}`;\n  }\n\n  formattedCents() {\n    const missingDigits = 4 - this.inputDigits.length;\n    if (missingDigits > 0) {\n      const leftDigits = [...Array(missingDigits).keys()].reduce((v) => '0' + v, '');\n      return leftDigits + this.inputDigits;\n    } else {\n      return this.inputDigits;\n    }\n  }\n\n  valueCents() {\n    return parseInt(this.formattedCents(), 10);\n  }\n\n  keyDown(digit) {\n    this.inputDigits = this.inputDigits + digit;\n  }\n\n  backspace() {\n    this.inputDigits = this.inputDigits.substring(0, this.inputDigits.length - 1);\n  }\n\n  clear() {\n    this.inputDigits = '';\n  }\n\n  static fromCents(amountCents, decimalSeparator = \".\") {\n    const formatter = new AmountFormatter(decimalSeparator);\n    const value = amountCents.toString();\n    for (let i = 0; i < value.length; i++) {\n      formatter.keyDown(value.charAt(i));\n    }\n    if (amountCents === 0) {\n      formatter.clear();\n    }\n    return formatter;\n  }\n}\n\nexport default AmountFormatter;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport AmountFormatter from \"../AmountFormatter\";\n\nclass AmountInput extends Component {\n\n  constructor(props) {\n    super(props);\n    this.amountFormatter = AmountFormatter.fromCents(this.props.initialValue);\n    this._amount = null;\n    this.state = {\n      value: this.props.initialValue,\n      formattedValue: this.amountFormatter.formatted()\n    };\n  }\n\n  static defaultProps = {\n    onDigit: () => console.warn(\"Unhadled onDigit\"),\n    onAmountChanged: () => undefined,\n    className: 'input-group-field amount-input',\n    initialValue: 0,\n  };\n\n  static propTypes = {\n    onDigit: PropTypes.func,\n    onAmountChanged: PropTypes.func,\n    initialValue: PropTypes.number,\n    inputClass: PropTypes.string,\n  };\n\n  amountChanged(event) {\n    let {key} = event;\n    event.preventDefault();\n    const keyCode = key.charCodeAt(0);\n    if (key === 'Tab') {\n      return;\n    }\n    event.preventDefault();\n    const isBackspace = key === 'Backspace';\n    const isDigit = keyCode >= '0'.charCodeAt(0) && keyCode <= '9'.charCodeAt(0);\n    if (isBackspace) {\n      this.amountFormatter.backspace();\n    } else if (isDigit) {\n      this.amountFormatter.keyDown(String.fromCharCode(keyCode));\n      this.props.onDigit(key);\n    }\n    this.props.onAmountChanged(this.amountFormatter.valueCents());\n    this.setState({\n      value: this.amountFormatter.valueCents(),\n      formattedValue: this.amountFormatter.formatted()\n    });\n  }\n\n  clear() {\n    this.amountFormatter.clear();\n    this.setState({\n      value: this.amountFormatter.valueCents(),\n      formattedValue: this.amountFormatter.formatted()\n    });\n  }\n\n  render() {\n    return (\n      <input\n        type='number'\n        className={this.props.inputClass}\n        name='amount'\n        onChange={() => undefined}\n        onKeyDown={this.amountChanged.bind(this)}\n        ref={(node) => {\n          this._amount = node;\n        }}\n        value={this.state.formattedValue}\n      />\n    );\n  }\n}\n\nexport default AmountInput\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport AmountFormatter from \"../AmountFormatter\";\nimport AmountInput from \"./AmountInput\";\n\nclass ExpenseForm extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this._validationMessages = {};\n    this.amountFormatter = new AmountFormatter();\n  }\n\n  static defaultProps = {\n    onSubmit: (e, submit) => console.warn(\"Unhadled onSubmit\"),\n    onValidationError: () => console.warn(\"Unhadled validation error\"),\n    categories: [],\n  };\n\n  static propTypes = {\n    categories: PropTypes.array,\n    onSubmit: PropTypes.func,\n    onValidationError: PropTypes.func,\n  };\n\n  amountChanged(event) {\n    let {key} = event;\n    const keyCode = key.charCodeAt(0);\n    if (key === 'Tab') {\n      return;\n    }\n    event.preventDefault();\n    const isBackspace = key === 'Backspace';\n    const isDigit = keyCode >= '0'.charCodeAt(0) && keyCode <= '9'.charCodeAt(0);\n    if (isBackspace) {\n      this.amountFormatter.backspace();\n    } else if (isDigit) {\n      this.amountFormatter.keyDown(String.fromCharCode(keyCode));\n      this._validationMessages.amount.empty.className = 'form-error';\n    }\n    this._amount.value = this.amountFormatter.formatted();\n    this.setState({amount: this.amountFormatter.valueCents()});\n  }\n\n  clearErrors() {\n    this._validationMessages.amount.empty.className = 'form-error';\n  }\n\n  categorySelected(event) {\n    let {value} = event.target;\n    let categorySelected = this.props.categories.filter(c => c.id === parseInt(value, 10))[0];\n    this._validationMessages.category.empty.className = 'form-error';\n    this.setState({category: categorySelected});\n  }\n\n  formSubmitted() {\n    let onSubmit = this.props.onSubmit;\n    return (event) => {\n      let state = this.state;\n      const {category} = state;\n      const amount = this._amount.state.value;\n      const validationErrors = [];\n      if (!category) {\n        validationErrors.push({where: \"category\", type: \"empty_field\"});\n        this._validationMessages.category.empty.className = 'form-error is-visible';\n      }\n      if (!amount) {\n        validationErrors.push({where: \"amount\", type: \"empty_field\"});\n        this._validationMessages.amount.empty.className = 'form-error is-visible';\n      }\n      if (validationErrors.length !== 0) {\n        event.preventDefault();\n        this.props.onValidationError(validationErrors);\n        return;\n      }\n      this.setState({amount: null, category: null});\n      this.amountFormatter.clear();\n      this._amount.value = this.amountFormatter.formatted();\n      this._category.value = null;\n      this._comment.value = null;\n      this._amount.clear();\n      onSubmit(event, { ...state, amount: amount });\n    }\n  }\n\n  render() {\n    const categories = this.props.categories.map((category, index) => {\n      return <option key={index} value={category.id}>{category.name}</option>\n    });\n\n    return (\n        <form className='expense-form'>\n          <label>\n            <div>\n            Amount\n              <div className=\"input-group\">\n                <span className=\"input-group-label\">€</span>\n                <AmountInput\n                  ref={(node) => this._amount = node}\n                  onDigit={this.clearErrors.bind(this)}\n                  inputClass='input-group-field amount-input'\n                />\n              </div>\n              <div className='form-error-container'>\n                <span ref={node => this._validationMessages.amount = {empty: node}} className='form-error'>\n                  Amount cannot be empty\n                </span>\n              </div>\n            </div>\n          </label>\n\n          <label>\n            <div>\n              Category\n              <select\n                defaultValue={0}\n                className='expense-form-category' name='category'\n                onChange={this.categorySelected.bind(this)}\n                ref={(node) => this._category = node}\n              >\n                <option value={0} />\n                {categories}\n              </select>\n              <div className='form-error-container'>\n                <span ref={node => this._validationMessages.category = {empty: node}} className='form-error'>\n                    Category cannot be empty\n                </span>\n              </div>\n            </div>\n          </label>\n          <label>\n            <div>\n              Comment\n              <input\n                ref={(node) => this._comment = node}\n                type=\"text\"\n                className='expense-form-category' name='category'\n                onChange={(event) => this.setState({ comment: event.target.value })}\n              >\n              </input>\n            </div>\n          </label>\n\n          <input\n            type='submit'\n            className='expense-form-submit success button expanded large'\n            value='Add expense'\n            onSubmit={this.formSubmitted().bind(this)}\n            onClick={this.formSubmitted().bind(this)}\n            ref={(node) => this._submit = node}\n          />\n        </form>\n    );\n  }\n}\n\nexport default ExpenseForm\n","import moment from 'moment';\n\nconst decimalSeparator = (1.1).toLocaleString().substring(1, 2);\n\nclass Expense {\n  constructor(parameters, dateProvider = function() { return moment() }) {\n    const {id, amountCents, categoryId, comment, deleted} = parameters;\n    this.id = id;\n    this.amountCents = amountCents;\n    this.categoryId = categoryId;\n    this.comment = comment;\n    const now = dateProvider();\n    this.deleted = deleted || false;\n    this.date = {\n      day: now.date(),\n      month: now.month() + 1,\n      year: now.year(),\n      hour: now.hour(),\n      minute: now.minute(),\n    }\n  }\n\n  static createFromState(id, state) {\n    let categoryId = state.category.id;\n\n    return new Expense({\n      id: id,\n      amountCents: state.amount,\n      categoryId: categoryId,\n      comment: state.comment\n    });\n  }\n\n  amountAsString() {\n    let cents = this.amountCents % 10;\n    let units = this.amountCents / 10;\n    return `${units}${decimalSeparator}${cents}`;\n  }\n\n  sameMonth(yearMonth) {\n    return this.getDateMoment().format(\"YYYY_MM\") === yearMonth.yearMonth;\n  }\n\n  formattedDate() {\n    if (!this.date) {\n      return '-'\n    }\n    return this.getDateMoment().format(\"DD-MM-YYYY HH:mm\");\n  }\n\n  static fromJsonObj(obj) {\n    const expense = new Expense({\n      id: obj.id,\n      amountCents: obj.amountCents,\n      categoryId: obj.categoryId,\n      comment: obj.comment,\n      deleted: obj.deleted,\n    });\n\n    expense.date = obj.date;\n\n    if (expense.date) {\n      expense.date.hour = obj.date.hour || 12;\n      expense.date.minute = obj.date.minute || 0;\n    }\n    return expense;\n  }\n\n  getDateMoment() {\n    const fmtDate = `${this.date.day}-${this.date.month}-${this.date.year} ${this.date.hour}:${this.date.minute}`;\n    return moment(fmtDate, \"DD-MM-YYYY HH:mm\");\n  }\n}\n\nexport default Expense;\n","import uuid from 'uuid/v4';\n\nclass UUIDGenerator {\n  next() {\n    return uuid();\n  }\n}\n\nexport default UUIDGenerator;\n","import moment from \"moment\";\n\nfunction currentDateProvider() {\n  return moment();\n}\n\nclass AmountSpent {\n  constructor(amount, spentPreviousMonth = 0, dateProvider = currentDateProvider) {\n    this._dateProvider = dateProvider;\n    this.amount = amount;\n    this.projected = this._calculateProjection();\n    this.spentPreviousMonth = spentPreviousMonth;\n    this.rate = this._calculateSpentRateVsPreviousMonth();\n  }\n\n  _calculateProjection() {\n    const today = this._dateProvider().date();\n    const endOfMonth = this._dateProvider().endOf('month').date();\n\n    return Math.round((endOfMonth * this.amount) / today);\n  }\n  _calculateSpentRateVsPreviousMonth() {\n    if (this.amount && this.spentPreviousMonth) {\n      return Math.round((this.amount / this.spentPreviousMonth) * 100);\n    }\n    return undefined;\n  }\n}\n\nexport default AmountSpent;","import Expense from \"./Expense\";\nimport UUIDGenerator from \"./UUIDGenerator\";\nimport AmountSpent from \"./AmountSpent\";\n\nconst nummusPrefix = \"nummus.io\";\nconst expenseKeysKey = nummusPrefix + \".expenseKeys\";\n\nclass ExpenseRepository {\n  localStorage;\n\n  constructor(localStorage) {\n    this.localStorage = localStorage;\n  }\n\n  list() {\n    return this.listAll()\n      .filter(e => e.deleted !== true);\n  }\n\n  listAll() {\n    return this._getExpenseKeys()\n      .map(this.localStorage.getItem.bind(this.localStorage))\n      .map(JSON.parse)\n      .map(Expense.fromJsonObj)\n      .sort((a, b) => -a.getDateMoment().diff(b.getDateMoment(), 'minutes'));\n  }\n\n  _getExpenseKeys() {\n    const arrayJson = this.localStorage.getItem(expenseKeysKey) || '[]';\n    return JSON.parse(arrayJson);\n  }\n\n  add(expense) {\n    let key = `${nummusPrefix}.expenses.${expense.id}`;\n    let expenseKeys = this._getExpenseKeys();\n    this.localStorage.setItem(key, JSON.stringify(expense));\n    expenseKeys.push(key);\n    this.localStorage.setItem(expenseKeysKey, JSON.stringify(expenseKeys));\n  }\n\n  delete(expense) {\n    let key = `${nummusPrefix}.expenses.${expense.id}`;\n    expense.deleted = true;\n    this.localStorage.setItem(key, JSON.stringify(expense));\n  }\n\n  hardDelete(expense) {\n    let key = `${nummusPrefix}.expenses.${expense.id}`;\n    let expenseKeys = this._getExpenseKeys();\n    this.localStorage.removeItem(key);\n    expenseKeys = expenseKeys.filter(savedKey => savedKey !== key);\n    this.localStorage.setItem(expenseKeysKey, JSON.stringify(expenseKeys));\n  }\n\n  amountsByCategory(yearMonth) {\n    let previousMonthAmounts = this._amountsByCategory(yearMonth.previousMonth());\n    return new Map(Array.from(this._amountsByCategory(yearMonth)).map(([id, amount]) => {\n        return [id, new AmountSpent(amount, previousMonthAmounts.get(id))]\n      }\n    ));\n  }\n\n  _amountsByCategory(yearMonth) {\n    return this.list()\n      .filter(expense => expense.sameMonth(yearMonth))\n      .reduce((map, expense) => {\n        const currentAmount = map.get(expense.categoryId) ? map.get(expense.categoryId) : 0;\n        map.set(expense.categoryId, currentAmount + expense.amountCents);\n        return map;\n      }, new Map());\n  }\n\n  dump() {\n    return JSON.stringify(this.listAll());\n  }\n\n  loadDump(jsonString) {\n    this.list().forEach(this.hardDelete.bind(this));\n    JSON.parse(jsonString)\n      .map(Expense.fromJsonObj)\n      .forEach(this.add.bind(this));\n  }\n\n  findBy(yearMonth) {\n    let yearMonthMoment = yearMonth.toMoment();\n    return this.list()\n      .filter(expense => {\n        let expenseDate = expense.getDateMoment();\n        return expenseDate.month() === yearMonthMoment.month() && expenseDate.year() === yearMonthMoment.year();\n      });\n  }\n\n  userUuid() {\n    let key = nummusPrefix + \".userUuid\";\n    let uuid = this.localStorage.getItem(key) || new UUIDGenerator().next();\n    this.localStorage.setItem(key, uuid);\n\n    return uuid;\n  }\n\n  setUserUuid(uuid) {\n    let key = nummusPrefix + \".userUuid\";\n    this.localStorage.setItem(key, uuid);\n  }\n\n  apiKey() {\n    let key = nummusPrefix + \".apiKey\";\n    return this.localStorage.getItem(key);\n  }\n\n  saveApiKey(apiKey) {\n    let key = nummusPrefix + \".apiKey\";\n    this.localStorage.setItem(key, apiKey);\n  }\n}\n\nexport default ExpenseRepository;\n","class MonthlyBudget {\n  constructor(id, categoryBudgets, month) {\n    this.id = id;\n    this.categoryBudgets = categoryBudgets;\n    this.month = month;\n  }\n\n}\n\nexport default MonthlyBudget;\n","const decimalSeparator = (1.1).toLocaleString().substring(1, 2);\n\nclass CategoryBudget {\n  constructor(id, budgeted, categoryId) {\n    this.id = id;\n    this.budgeted = budgeted;\n    this.categoryId = categoryId;\n  }\n\n  static fromCategory(yearMonth) {\n    return (category) =>\n      new CategoryBudget(`${category.id}_${yearMonth}`, 0, category.id);\n  }\n\n  setBudget(budgeted) {\n    this.budgeted = budgeted;\n  }\n\n  formatedBudgetedAmount() {\n    let cents = this.budgeted % 100;\n    let units = Math.floor(this.budgeted / 100);\n    return `${units}${decimalSeparator}${cents}`;\n  }\n}\n\nexport default CategoryBudget;\n","import moment from 'moment';\nimport MonthlyBudget from \"./MonthlyBudget\";\nimport CategoryBudget from \"./CategoryBudget\";\n\nconst nummusPrefix = \"nummus.io\";\n\nclass BudgetRepository {\n  constructor(localStorage, categoryRepository, dateProvider = currentDateProvider) {\n    this._localStorage = localStorage;\n    this._categoryRepository = categoryRepository;\n    this._dateProvider = dateProvider;\n    this._initializeBudgets();\n  }\n\n  list() {\n    return this.categories;\n  }\n\n  _now() {\n    return this._dateProvider()\n  }\n\n  currentMonthlyBudget() {\n    const yearMonth = this._now().format(\"YYYY_MM\");\n    return this._findOrCreate(yearMonth);\n  }\n\n  findMonth(yearMonth) {\n    return this.listMonths().filter(m => m.yearMonth === yearMonth)[0];\n  }\n\n  _findOrCreate(yearMonth) {\n    const key = `${nummusPrefix}.monthlyBudgets.${yearMonth}`;\n    const found = this._localStorage.getItem(key);\n\n    if (found) {\n      const budget = this._parseObject(found);\n      budget.categoryBudgets = budget.categoryBudgets.map(obj => Object.assign(new CategoryBudget(), obj));\n      return budget;\n    }\n\n    const categoryBudgets = this._categoryRepository.list()\n      .map(CategoryBudget.fromCategory(yearMonth));\n\n    const newBudget = new MonthlyBudget(key, categoryBudgets, yearMonth);\n\n    this._localStorage.setItem(key, JSON.stringify(newBudget));\n    return newBudget;\n  }\n\n  _parseObject(found) {\n    return Object.assign(new MonthlyBudget(), JSON.parse(found));\n  }\n\n  update(monthlyBudget) {\n    const key = `${nummusPrefix}.monthlyBudgets.${monthlyBudget.month}`;\n    this._localStorage.setItem(key, JSON.stringify(monthlyBudget));\n  }\n\n  listMonths() {\n    return Object.keys(this._localStorage)\n      .filter(k => k.startsWith(\"nummus.io.monthlyBudgets\"))\n      .map(k => this._parseObject(this._localStorage.getItem(k)))\n      .map(budget => new BudgetRepository.YearMonth(budget.month, this._dateProvider))\n      .sort((month1, month2) => -month1.toMoment().diff(month2.toMoment(), 'minutes'))\n      .reverse()\n  }\n\n  currentMonth() {\n    return this.listMonths().filter(m => m.is_current)[0];\n  }\n\n  _initializeBudgets() {\n    this._findOrCreate(this._now().add(1, 'month').format(\"YYYY_MM\"));\n    this._findOrCreate(this._now().format(\"YYYY_MM\"));\n    this._findOrCreate(this._now().subtract(1, 'month').format(\"YYYY_MM\"));\n  }\n\n  static YearMonth = class {\n    constructor(yearMonth, dateProvider = currentDateProvider) {\n      this.is_current = dateProvider().format(\"YYYY_MM\") === yearMonth;\n      this.yearMonth = yearMonth;\n    }\n\n    formatted() {\n      return this.toMoment().format(\"MMM YY\");\n    }\n\n    toMoment() {\n      return moment(this.yearMonth, \"YYYY_MM\")\n    }\n\n    previousMonth() {\n      return new BudgetRepository.YearMonth(\n        this.toMoment().subtract(1, 'months').format(\"YYYY_MM\")\n      );\n    }\n\n  }\n}\n\nfunction currentDateProvider() {\n  return moment();\n}\n\nexport default BudgetRepository;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport ExpenseRepository from \"../../domain/ExpenseRepository\";\nimport AmountFormatter from \"../AmountFormatter\";\nimport BudgetRepository from \"../../domain/BudgetRepository\";\n\n\nclass ExpenseHistory extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      expenses: this.props.expenses,\n      showCsv: false\n    };\n  }\n\n  static propTypes = {\n    expenseRepository: PropTypes.instanceOf(ExpenseRepository),\n    selectedMonth: PropTypes.instanceOf(BudgetRepository.YearMonth),\n    expenses: PropTypes.array,\n    categoriesById: PropTypes.object,\n  };\n\n  makeItem(expense, index) {\n    let category = this.props.categoriesById.get(expense.categoryId);\n    const formattedAmount = AmountFormatter.fromCents(expense.amountCents).formatted();\n    return (<tr className=\"expense-row\" key={index}>\n      <td>{expense.formattedDate()}</td>\n      <td>€{formattedAmount}</td>\n      <td>{category.name}</td>\n      <td>\n        <input\n          type='button'\n          value='Delete'\n          className='delete-expense alert button expanded'\n          onClick={this.deleteExpense(expense).bind(this)}\n        />\n      </td>\n    </tr>)\n  }\n\n  render() {\n    const rows = this.state.expenses.map(this.makeItem.bind(this));\n    return (\n      <div>\n        <table>\n          <tbody>\n          {rows}\n          </tbody>\n        </table>\n        <button className=\"button expanded large\" onClick={() => this.setState({showCsv: !this.state.showCsv})}>As csv</button>\n        <div className={this.state.showCsv ? \"\" : \"hide\"}>\n          <pre>{this.expensesAsCsv()}</pre>\n        </div>\n      </div>\n    );\n  }\n\n  deleteExpense(expense) {\n    return () => {\n      this.props.expenseRepository.delete(expense);\n      this.setState({expenses: this.props.expenseRepository.findBy(this.props.selectedMonth)});\n    }\n  }\n\n  expensesAsCsv() {\n    return this.props.expenses.map(e => {\n      const formattedAmount = AmountFormatter.fromCents(e.amountCents, \",\").formatted();\n      let category = this.props.categoriesById.get(e.categoryId);\n      return `${e.formattedDate()}\\t${formattedAmount}\\t${category.name}\\t${category.tags}\\t${e.comment || \"\"}`\n    }).reverse().join(\"\\n\") + \"\\n\\n\";\n  }\n}\n\nexport default ExpenseHistory\n","class Category {\n  constructor(id, name, tags) {\n    this.name = name;\n    this.id = id;\n    this.tags = tags;\n  }\n\n}\n\nexport default Category;\n","import Category from \"./Category\";\n\nclass CategoryRepository {\n\n  constructor() {\n    const categories = [\n      { name: 'fun', tags: [\"non-essential\"] },\n      { name: 'groceries', tags: [\"essential\"] },\n      { name: 'travel', tags: [\"non-essential\"] },\n      { name: 'dining out', tags: [\"non-essential\"] },\n      { name: 'rent', tags: [\"essential\"] },\n      { name: 'utilities', tags: [\"essential\"] },\n      { name: 'sports', tags: [\"non-essential\"] },\n      { name: 'transportation', tags: [\"essential\"] },\n      { name: 'lunch @ work', tags: [\"essential\"] },\n      { name: 'children', tags: [\"essential\"] },\n      { name: 'clothing', tags: [\"non-essential\"] },\n      { name: 'unexpected', tags: [\"essential\"] },\n    ].map((category, index) => {\n      return new Category(index, category.name, category.tags)\n    });\n\n    this.categories = categories.sort((a, b) => a.name.localeCompare(b.name));\n  }\n\n  list() {\n    return this.categories;\n  }\n\n  categoriesById() {\n    return this.list().reduce((map, v) => map.set(v.id, v), new Map())\n  }\n}\n\nexport default CategoryRepository;\n","class AutoIncrementIdGenerator {\n  id;\n\n  constructor() {\n    this.id = 0;\n  }\n\n  next() {\n    this.id++;\n    return this.id;\n  }\n}\n\nexport default AutoIncrementIdGenerator;\n","import React, {Component} from 'react';\nimport '../../../css/App.css';\nimport '../../../css/index.css';\nimport ExpenseForm from \"./ExpenseForm\";\nimport ExpenseHistory from \"./ExpenseHistory\";\nimport Expense from \"../../domain/Expense\";\nimport ExpenseRepository from \"../../domain/ExpenseRepository\";\nimport CategoryRepository from \"../../domain/CategoryRepository\";\nimport AutoIncrementIdGenerator from \"../../domain/AutoIncrementIdGenerator\";\nimport PropTypes from 'prop-types';\nimport BudgetRepository from \"../../domain/BudgetRepository\";\n\nclass ExpensesDash extends Component {\n\n  constructor(props) {\n    super(props);\n    this.categories = this.props.categoryRepository.list();\n    this.categoriesById = this.props.categoryRepository.categoriesById();\n    this.expenseRepository = this.props.expenseRepository || new ExpenseRepository(localStorage);\n    this.state = {\n      expenses: this.expenseRepository.findBy(this.props.selectedMonth)\n    };\n  }\n\n  static defaultProps = {\n    idGenerator: new AutoIncrementIdGenerator(),\n  };\n\n  static propTypes = {\n    idGenerator: PropTypes.shape({\n      next: PropTypes.func,\n    }),\n    categoryRepository: PropTypes.instanceOf(CategoryRepository),\n    expenseRepository: PropTypes.instanceOf(ExpenseRepository),\n    selectedMonth: PropTypes.instanceOf(BudgetRepository.YearMonth),\n  };\n\n\n  render() {\n    return (\n      <div className=\"grid-x grid-padding-x\">\n          <div className=\"large-6 medium-6 cell\">\n            <ExpenseForm\n                categories={this.categories}\n                onSubmit={this.expenseAdded.bind(this)}\n            />\n          </div>\n          <div className=\"large-6 medium-6 cell\">\n            <ExpenseHistory\n                categoriesById={this.categoriesById}\n                expenses={this.state.expenses}\n                expenseRepository={this.expenseRepository}\n                selectedMonth={this.props.selectedMonth}\n                ref={(node) => this._expenseHistory = node}\n            />\n          </div>\n      </div>\n    );\n  }\n\n  expenseAdded(event, state) {\n    event.preventDefault();\n\n    const nextId = this.props.idGenerator.next();\n    let expense = Expense.createFromState(nextId, state);\n    this.expenseRepository.add(expense);\n\n    this._expenseHistory.setState({\n      expenses: this.expenseRepository.findBy(this.props.selectedMonth)\n    });\n\n    this.setState({\n      expenses: this.expenseRepository.findBy(this.props.selectedMonth)\n    });\n  }\n}\n\nexport default ExpensesDash;\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport CategoryRepository from \"../../domain/CategoryRepository\";\nimport BudgetRepository from \"../../domain/BudgetRepository\";\nimport AmountFormatter from \"../AmountFormatter\";\nimport AmountSpent from \"../../domain/AmountSpent\";\n\nclass BudgetEntry extends Component {\n  static propTypes = {\n    amountSpent: PropTypes.instanceOf(AmountSpent),\n    categoryName: PropTypes.string,\n  };\n\n  render() {\n    let rate = '';\n    if (this.props.amountSpent.rate) {\n      let percentage = this.props.amountSpent.rate;\n      rate = <span>({percentage}%)</span>\n    }\n    return <tr>\n      <td>{this.props.categoryName}</td>\n      <td>\n        €{AmountFormatter.fromCents(this.props.amountSpent.amount).formatted()} {rate}\n      </td>\n      <td>\n        €{AmountFormatter.fromCents(this.props.amountSpent.spentPreviousMonth).formatted()}\n      </td>\n      <td>\n        €{AmountFormatter.fromCents(this.props.amountSpent.projected).formatted()}\n      </td>\n    </tr>\n  }\n}\n\nclass BudgetDash extends Component {\n  static propTypes = {\n    categoryRepository: PropTypes.instanceOf(CategoryRepository),\n    amountSpentByCategory: PropTypes.instanceOf(Map),\n    selectedMonth: PropTypes.instanceOf(BudgetRepository.YearMonth),\n  };\n\n  constructor(props) {\n    super(props);\n    this.categoriesById = this.props.categoryRepository.categoriesById();\n    let totalAmountSpent = Array.from(this.categoriesById)\n      .map(([id, category]) => {\n        return this._getAmountSpent(id).amount;\n      }).reduce((acc, amount) => acc + amount, 0);\n    this.totalAmountSpent = AmountFormatter.fromCents(totalAmountSpent).formatted()\n  }\n\n  render() {\n    const tbody = Array.from(this.categoriesById).map(([id, category]) =>\n      <BudgetEntry\n        key={id}\n        amountSpent={this._getAmountSpent(id)}\n        categoryName={this.categoriesById.get(id).name}\n      />\n    );\n    return (\n      <div>\n        <h1>Budget</h1>\n        <table className='category-budget-table'>\n          <thead>\n          <tr className='category-budget'>\n            <th>Category</th>\n            <th>Total spent</th>\n            <th>Previous month</th>\n            <th>Projected</th>\n          </tr>\n          </thead>\n          <tbody>\n          {tbody}\n          </tbody>\n        </table>\n        <p>Total expenses: €{this.totalAmountSpent}</p>\n      </div>\n    );\n  }\n\n  getAmount(categoryId) {\n    return AmountFormatter.fromCents(this._getAmountSpent(categoryId).amount).formatted();\n  }\n\n  getProjection(categoryId) {\n    return AmountFormatter.fromCents(this._getAmountSpent(categoryId).projected).formatted();\n  }\n\n  _getAmountSpent(categoryId) {\n    let amountSpent = this.props.amountSpentByCategory.get(categoryId);\n    return amountSpent ? amountSpent : new AmountSpent(0);\n  }\n}\n\nexport default BudgetDash;\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport BudgetRepository from \"../../domain/BudgetRepository\";\n\nclass MonthSelector extends Component {\n  static propTypes = {\n    budgetRepository: PropTypes.instanceOf(BudgetRepository),\n    onMonthChanged: PropTypes.func,\n  };\n\n  monthChanged(event) {\n    this.props.onMonthChanged(this.props.budgetRepository.findMonth(event.target.value));\n  }\n\n  render() {\n    let months = this.props.budgetRepository.listMonths();\n    let currentMonth = this.props.budgetRepository.currentMonth();\n    let options = months.map(month => {\n      return <option\n        value={month.yearMonth}\n        key={month.yearMonth}>\n        {month.formatted()}\n      </option>\n    });\n    return (\n      <div>\n        <select\n          defaultValue={currentMonth.yearMonth}\n          onChange={this.monthChanged.bind(this)}>\n          {options}\n        </select>\n      </div>\n    );\n  }\n\n}\n\nexport default MonthSelector;\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport ExpenseRepository from \"../../domain/ExpenseRepository\";\n\nlet API_ENDPOINT = \"https://hi6kvr95o9.execute-api.us-east-1.amazonaws.com/prod\";\n\nclass AdminDash extends Component {\n  static propTypes = {\n    expenseRepository: PropTypes.instanceOf(ExpenseRepository),\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.state.dump = this.props.expenseRepository.dump();\n    this.state.loading = false;\n    this.state.uploadCompleted = \"\";\n    this.state.apiKey = this.props.expenseRepository.apiKey();\n    this.state.userUuid = this.props.expenseRepository.userUuid();\n  }\n\n  loadDump() {\n    this.props.expenseRepository.loadDump(this.state.dump);\n  }\n\n  textAreaChanged(event) {\n    this.setState({\n      dump: event.target.value\n    });\n  }\n\n  apiKeyChanged(event) {\n    this.setState({\n      apiKey: event.target.value\n    });\n    this.props.expenseRepository.saveApiKey(event.target.value);\n  }\n\n  uuidChanged(event) {\n    this.setState({\n      userUuid: event.target.value\n    });\n    this.props.expenseRepository.setUserUuid(event.target.value);\n  }\n\n  uploadExpenses() {\n    this.setState({\n      loading: true\n    });\n    let component = this;\n    let promise = fetch(\n      `${API_ENDPOINT}/sync/${this.state.userUuid}`,\n      {\n        method: 'POST',\n        mode: 'cors',\n        headers: {\n          'X-Api-Key': this.state.apiKey,\n        },\n        body: this.state.dump,\n      }\n    );\n\n    promise.then(response => response.json())\n      .then(\n        response => {\n          let rawJson = JSON.stringify(response);\n          component.setState({\n              uploadCompleted: \"Sync completed\",\n              dump: rawJson,\n              loading: false\n            }\n          );\n          this.props.expenseRepository.loadDump(rawJson);\n        }, reason => {\n          component.setState({\n              uploadFailed: \"Failed to sync. Reason: \" + reason,\n              loading: false\n            }\n          );\n        })\n  }\n\n  downloadExpenses() {\n    let component = this;\n    let promise = fetch(\n      `${API_ENDPOINT}/sync/${this.state.userUuid}`,\n      {\n        method: 'GET',\n        mode: 'cors',\n        headers: {\n          'X-Api-Key': this.state.apiKey,\n        }\n      }\n    );\n\n    promise\n      .then(response => response.json())\n      .then(json => {\n        component.setState({\n          dump: JSON.stringify(json),\n          downloadCompleted: \"Download completed\",\n        });\n      });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Admin</h1>\n\n        <div className=\"form-group\">\n          <button\n            className='expense-form-submit button'\n            onClick={this.uploadExpenses.bind(this)}>\n            Sync expenses\n          </button>\n\n          <div className={this.state.uploadCompleted ? \"\" : \"hide\"}>\n            <div className=\"callout success\">\n              <p>{this.state.uploadCompleted}</p>\n            </div>\n          </div>\n          <div className={this.state.uploadFailed ? \"\" : \"hide\"}>\n            <div className=\"callout alert\">\n              <p>{this.state.uploadFailed}</p>\n            </div>\n          </div>\n\n          <div className={this.state.loading ? \"lds-dual-ring\" : \"hide\"}/>\n\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"apiKey\">Api key</label>\n          <input value={this.state.apiKey}\n                 className=\"form-control\"\n                 type=\"text\"\n                 id=\"apiKey\"\n                 placeholder=\"Enter api key\"\n                 onChange={this.apiKeyChanged.bind(this)}/>\n\n          <label htmlFor=\"userUuid\">User uuid</label>\n          <input value={this.state.userUuid}\n                 className=\"form-control\"\n                 type=\"text\"\n                 id=\"userUuid\"\n                 placeholder=\"Enter user UUID\"\n                 onChange={this.uuidChanged.bind(this)}/>\n        </div>\n\n        <hr/>\n        <div className=\"form-group\">\n          <label htmlFor=\"expensesData\">Expenses dump</label>\n          <textarea\n            id=\"expensesData\"\n            value={this.state.dump}\n            className=\"form-control\"\n            onChange={this.textAreaChanged.bind(this)}\n          />\n        </div>\n\n        <button\n          className='expense-form-submit button'\n          onClick={this.loadDump.bind(this)}>\n          Load dump\n        </button>\n\n      </div>\n    );\n  }\n\n  getAmount(categoryBudget) {\n    return this.state.remainingAmounts.get(categoryBudget.categoryId);\n  }\n}\n\nexport default AdminDash;\n","import React, {Component} from 'react';\nimport ExpensesDash from \"./ExpensesDash\";\nimport BudgetDash from \"./BudgetDash\";\nimport MonthSelector from \"./MonthSelector\";\nimport AdminDash from \"./AdminDash\";\nimport {BrowserRouter as Router, Link, Route} from 'react-router-dom'\nimport UUIDGenerator from \"../../domain/UUIDGenerator\";\nimport CategoryRepository from \"../../domain/CategoryRepository\";\nimport BudgetRepository from \"../../domain/BudgetRepository\";\nimport ExpenseRepository from \"../../domain/ExpenseRepository\";\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.categoryRepository = new CategoryRepository();\n    this.budgetRepository = new BudgetRepository(localStorage, this.categoryRepository);\n    this.expenseRepository = new ExpenseRepository(localStorage);\n\n    this.state = {\n      selectedMonth: this.budgetRepository.currentMonth()\n    }\n  }\n\n  makeExpensesDash() {\n    return <ExpensesDash\n      idGenerator={new UUIDGenerator()}\n      categoryRepository={this.categoryRepository}\n      selectedMonth={this.state.selectedMonth}\n    />;\n  }\n\n  makeBudgetDash() {\n    return <BudgetDash\n      categoryRepository={this.categoryRepository}\n      budgetRepository={this.budgetRepository}\n      amountSpentByCategory={this.expenseRepository.amountsByCategory(this.state.selectedMonth)}\n      selectedMonth={this.state.selectedMonth}\n    />\n  }\n\n  makeAdminDash() {\n    return <AdminDash\n      expenseRepository={this.expenseRepository}\n    />\n  }\n\n  monthChanged(month) {\n    this.setState({\n      selectedMonth: month\n    });\n  }\n\n  render() {\n    return (\n      <Router>\n        <div>\n          <div className=\"top-bar\" id=\"responsive-menu\">\n            <div className=\"top-bar-left\">\n              <ul className=\"dropdown menu\" data-dropdown-menu>\n                <li className=\"menu-text\"><Link to=\"/nummus/\">Nummus</Link></li>\n                <li>\n                  <Link to=\"/nummus/budget/\">Budget</Link>\n                </li>\n                <li>\n                  <Link to=\"/nummus/admin\">Admin</Link>\n                </li>\n                <li>\n                  <MonthSelector budgetRepository={this.budgetRepository} onMonthChanged={this.monthChanged.bind(this)}/>\n                </li>\n              </ul>\n            </div>\n          </div>\n          <div className=\"grid-container main-container\">\n            <Route exact path=\"/nummus/\" component={this.makeExpensesDash.bind(this)}/>\n            <Route path=\"/nummus/budget/\" component={this.makeBudgetDash.bind(this)}/>\n            <Route path=\"/nummus/admin/\" component={this.makeAdminDash.bind(this)}/>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  const shouldRegister = process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator;\n  // const shouldRegister = true;\n  if (shouldRegister) {\n    window.addEventListener(\"beforeinstallprompt\", function(e) {\n      // log the platforms provided as options in an install prompt\n      console.log(e.platforms); // e.g., [\"web\", \"android\", \"windows\"]\n      e.userChoice.then(function(outcome) {\n        console.log(outcome); // either \"accepted\" or \"dismissed\"\n      }, () => undefined);\n    });\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './main/css/index.css';\nimport App from './main/js/application/components/App';\nimport registerServiceWorker from './main/js/registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}