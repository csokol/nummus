{"version":3,"sources":["main/js/application/AmountFormatter.js","main/js/application/components/AmountInput.js","main/js/application/components/ExpenseForm.js","main/js/domain/Expense.js","main/js/domain/UUIDGenerator.js","main/js/domain/ExpenseRepository.js","main/js/domain/MonthlyBudget.js","main/js/domain/CategoryBudget.js","main/js/domain/BudgetRepository.js","main/js/application/components/ExpenseHistory.js","main/js/domain/Category.js","main/js/domain/CategoryRepository.js","main/js/domain/AutoIncrementIdGenerator.js","main/js/application/components/ExpensesDash.js","main/js/application/components/BudgetInput.js","main/js/application/components/BudgetDash.js","main/js/application/components/MonthSelector.js","main/js/application/components/AdminDash.js","main/js/application/components/App.js","main/js/registerServiceWorker.js","index.js"],"names":["AmountFormatter","Object","classCallCheck","this","inputDigits","cents","formattedCents","centsPart","substring","length","unitsPart","concat","missingDigits","toConsumableArray","Array","keys","reduce","v","parseInt","digit","amountCents","formatter","value","toString","i","keyDown","charAt","clear","AmountInput","props","_this","possibleConstructorReturn","getPrototypeOf","call","amountFormatter","fromCents","initialValue","_amount","state","formattedValue","formatted","event","key","preventDefault","keyCode","charCodeAt","isBackspace","isDigit","backspace","String","fromCharCode","onDigit","onAmountChanged","valueCents","setState","_this2","react_default","a","createElement","type","className","inputClass","name","onChange","onKeyDown","amountChanged","bind","ref","node","Component","defaultProps","console","warn","ExpenseForm","_validationMessages","amount","empty","target","categorySelected","categories","filter","c","id","category","onSubmit","validationErrors","push","where","onValidationError","_category","objectSpread","_this3","map","index","components_AmountInput","clearErrors","defaultValue","formSubmitted","onClick","_submit","e","submit","decimalSeparator","toLocaleString","Expense","parameters","dateProvider","arguments","undefined","moment","categoryId","now","date","day","month","year","hour","minute","units","getDateMoment","format","fmtDate","obj","expense","UUIDGenerator","uuid","ExpenseRepository","localStorage","_getExpenseKeys","getItem","JSON","parse","fromJsonObj","sort","b","diff","arrayJson","nummusPrefix","expenseKeys","setItem","stringify","removeItem","savedKey","list","currentAmount","get","set","Map","jsonString","forEach","delete","add","yearMonth","yearMonthMoment","toMoment","expenseDate","next","apiKey","MonthlyBudget","categoryBudgets","CategoryBudget","budgeted","Math","floor","BudgetRepository","categoryRepository","currentDateProvider","_localStorage","_categoryRepository","_dateProvider","_initializeBudgets","_now","_findOrCreate","listMonths","m","found","budget","_parseObject","assign","fromCategory","newBudget","monthlyBudget","k","startsWith","YearMonth","month1","month2","reverse","is_current","subtract","_class","ExpenseHistory","expenses","categoriesById","formattedAmount","formattedDate","deleteExpense","rows","makeItem","expenseRepository","findBy","selectedMonth","Category","CategoryRepository","localeCompare","AutoIncrementIdGenerator","ExpensesDash","components_ExpenseForm","expenseAdded","components_ExpenseHistory","_expenseHistory","nextId","idGenerator","createFromState","unit","x","BudgetInput","newAmount","categoryBudget","setBudget","budgetUpdated","_amountInput","updateBudget","BudgetDash","_budgetInputs","_budget","budgetRepository","currentMonthlyBudget","remainingAmounts","spent","amountSpentByCategory","remaining","update","tbody","components_BudgetInput","getAmount","MonthSelector","onMonthChanged","findMonth","months","currentMonth","options","monthChanged","API_ENDPOINT","AdminDash","dump","uploadCompleted","userUuid","loadDump","saveApiKey","setUserUuid","component","fetch","method","mode","headers","x-api-key","body","then","response","json","downloadCompleted","htmlFor","placeholder","apiKeyChanged","uuidChanged","textAreaChanged","uploadExpenses","downloadExpenses","App","components_ExpensesDash","components_BudgetDash","amountsByCategory","components_AdminDash","BrowserRouter","data-dropdown-menu","Link","to","components_MonthSelector","Route","exact","path","makeExpensesDash","makeBudgetDash","makeAdminDash","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.d7246700.chunk.js","sourcesContent":["\nconst decimalSeparator = \".\";\nclass AmountFormatter {\n\n  constructor() {\n    this.inputDigits = '';\n  }\n\n  formatted() {\n    const cents = this.formattedCents();\n\n    let centsPart = cents.substring(cents.length - 2, cents.length);\n    let unitsPart = cents.substring(0, cents.length - 2);\n    return `${unitsPart}${decimalSeparator}${centsPart}`;\n  }\n\n  formattedCents() {\n    const missingDigits = 4 - this.inputDigits.length;\n    if (missingDigits > 0) {\n      const leftDigits = [...Array(missingDigits).keys()].reduce((v) => '0' + v, '');\n      return leftDigits + this.inputDigits;\n    } else {\n      return this.inputDigits;\n    }\n  }\n\n  valueCents() {\n    return parseInt(this.formattedCents(), 10);\n  }\n\n  keyDown(digit) {\n    this.inputDigits = this.inputDigits + digit;\n  }\n\n  backspace() {\n    this.inputDigits = this.inputDigits.substring(0, this.inputDigits.length - 1);\n  }\n\n  clear() {\n    this.inputDigits = '';\n  }\n\n  static fromCents(amountCents) {\n    const formatter = new AmountFormatter();\n    const value = amountCents.toString();\n    for (let i = 0; i < value.length; i++) {\n      formatter.keyDown(value.charAt(i));\n    }\n    if (amountCents === 0) {\n      formatter.clear();\n    }\n    return formatter;\n  }\n}\n\nexport default AmountFormatter;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport AmountFormatter from \"../AmountFormatter\";\n\nclass AmountInput extends Component {\n\n  constructor(props) {\n    super(props);\n    this.amountFormatter = AmountFormatter.fromCents(this.props.initialValue);\n    this._amount = null;\n    this.state = {\n      value: this.props.initialValue,\n      formattedValue: this.amountFormatter.formatted()\n    };\n  }\n\n  static defaultProps = {\n    onDigit: () => console.warn(\"Unhadled onDigit\"),\n    onAmountChanged: () => undefined,\n    className: 'input-group-field amount-input',\n    initialValue: 0,\n  };\n\n  static propTypes = {\n    onDigit: PropTypes.func,\n    onAmountChanged: PropTypes.func,\n    initialValue: PropTypes.number,\n    inputClass: PropTypes.string,\n  };\n\n  amountChanged(event) {\n    let {key} = event;\n    event.preventDefault();\n    const keyCode = key.charCodeAt(0);\n    if (key === 'Tab') {\n      return;\n    }\n    event.preventDefault();\n    const isBackspace = key === 'Backspace';\n    const isDigit = keyCode >= '0'.charCodeAt(0) && keyCode <= '9'.charCodeAt(0);\n    if (isBackspace) {\n      this.amountFormatter.backspace();\n    } else if (isDigit) {\n      this.amountFormatter.keyDown(String.fromCharCode(keyCode));\n      this.props.onDigit(key);\n    }\n    this.props.onAmountChanged(this.amountFormatter.valueCents());\n    this.setState({\n      value: this.amountFormatter.valueCents(),\n      formattedValue: this.amountFormatter.formatted()\n    });\n  }\n\n  render() {\n    return (\n      <input\n        type='number'\n        className={this.props.inputClass}\n        name='amount'\n        onChange={() => undefined}\n        onKeyDown={this.amountChanged.bind(this)}\n        ref={(node) => {\n          this._amount = node;\n        }}\n        value={this.state.formattedValue}\n      />\n    );\n  }\n}\n\nexport default AmountInput\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport AmountFormatter from \"../AmountFormatter\";\nimport AmountInput from \"./AmountInput\";\n\nclass ExpenseForm extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this._validationMessages = {};\n    this.amountFormatter = new AmountFormatter();\n  }\n\n  static defaultProps = {\n    onSubmit: (e, submit) => console.warn(\"Unhadled onSubmit\"),\n    onValidationError: () => console.warn(\"Unhadled validation error\"),\n    categories: [],\n  };\n\n  static propTypes = {\n    categories: PropTypes.array,\n    onSubmit: PropTypes.func,\n    onValidationError: PropTypes.func,\n  };\n\n  amountChanged(event) {\n    let {key} = event;\n    const keyCode = key.charCodeAt(0);\n    if (key === 'Tab') {\n      return;\n    }\n    event.preventDefault();\n    const isBackspace = key === 'Backspace';\n    const isDigit = keyCode >= '0'.charCodeAt(0) && keyCode <= '9'.charCodeAt(0);\n    if (isBackspace) {\n      this.amountFormatter.backspace();\n    } else if (isDigit) {\n      this.amountFormatter.keyDown(String.fromCharCode(keyCode));\n      this._validationMessages.amount.empty.className = 'form-error';\n    }\n    this._amount.value = this.amountFormatter.formatted();\n    this.setState({amount: this.amountFormatter.valueCents()});\n  }\n\n  clearErrors() {\n    this._validationMessages.amount.empty.className = 'form-error';\n  }\n\n  categorySelected(event) {\n    let {value} = event.target;\n    let categorySelected = this.props.categories.filter(c => c.id === parseInt(value, 10))[0];\n    this._validationMessages.category.empty.className = 'form-error';\n    this.setState({category: categorySelected});\n  }\n\n  formSubmitted() {\n    let onSubmit = this.props.onSubmit;\n    return (event) => {\n      let state = this.state;\n      const {category} = state;\n      const amount = this._amount.state.value;\n      const validationErrors = [];\n      if (!category) {\n        validationErrors.push({where: \"category\", type: \"empty_field\"});\n        this._validationMessages.category.empty.className = 'form-error is-visible';\n      }\n      if (!amount) {\n        validationErrors.push({where: \"amount\", type: \"empty_field\"});\n        this._validationMessages.amount.empty.className = 'form-error is-visible';\n      }\n      if (validationErrors.length !== 0) {\n        event.preventDefault();\n        this.props.onValidationError(validationErrors);\n        return;\n      }\n      this.setState({amount: null, category: null});\n      this.amountFormatter.clear();\n      this._amount.value = this.amountFormatter.formatted();\n      this._category.value = null;\n      onSubmit(event, { ...state, amount: amount });\n    }\n  }\n\n  render() {\n    const categories = this.props.categories.map((category, index) => {\n      return <option key={index} value={category.id}>{category.name}</option>\n    });\n\n    return (\n        <form className='expense-form'>\n          <label>\n            <div>\n            Amount\n              <div className=\"input-group\">\n                <span className=\"input-group-label\">€</span>\n                <AmountInput\n                  ref={(node) => this._amount = node}\n                  onDigit={this.clearErrors.bind(this)}\n                  inputClass='input-group-field amount-input'\n                />\n              </div>\n              <div className='form-error-container'>\n                <span ref={node => this._validationMessages.amount = {empty: node}} className='form-error'>\n                  Amount cannot be empty\n                </span>\n              </div>\n            </div>\n          </label>\n\n          <label>\n            <div>\n              Category\n              <select\n                defaultValue={0}\n                className='expense-form-category' name='category'\n                onChange={this.categorySelected.bind(this)}\n                ref={(node) => this._category = node}\n              >\n                <option value={0} />\n                {categories}\n              </select>\n              <div className='form-error-container'>\n                <span ref={node => this._validationMessages.category = {empty: node}} className='form-error'>\n                    Category cannot be empty\n                </span>\n              </div>\n            </div>\n          </label>\n\n          <input\n            type='submit'\n            className='expense-form-submit success button expanded large'\n            value='Add expense'\n            onSubmit={this.formSubmitted().bind(this)}\n            onClick={this.formSubmitted().bind(this)}\n            ref={(node) => this._submit = node}\n          />\n        </form>\n    );\n  }\n}\n\nexport default ExpenseForm\n","import moment from 'moment';\n\nconst decimalSeparator = (1.1).toLocaleString().substring(1, 2);\n\nclass Expense {\n  constructor(parameters, dateProvider = function() { return moment() }) {\n    const {id, amountCents, categoryId} = parameters;\n    this.id = id;\n    this.amountCents = amountCents;\n    this.categoryId = categoryId;\n    const now = dateProvider();\n    this.date = {\n      day: now.date(),\n      month: now.month() + 1,\n      year: now.year(),\n      hour: now.hour(),\n      minute: now.minute(),\n    }\n  }\n\n  static createFromState(id, state) {\n    let categoryId = state.category.id;\n\n    return new Expense({\n      id: id,\n      amountCents: state.amount,\n      categoryId: categoryId\n    });\n  }\n\n  amountAsString() {\n    let cents = this.amountCents % 10;\n    let units = this.amountCents / 10;\n    return `${units}${decimalSeparator}${cents}`;\n  }\n\n  formattedDate() {\n    if (!this.date) {\n      return '-'\n    }\n    return this.getDateMoment().format(\"DD-MM-YYYY HH:mm\");\n  }\n\n  static fromJsonObj(obj) {\n    const expense = new Expense({\n      id: obj.id,\n      amountCents: obj.amountCents,\n      categoryId: obj.categoryId\n    });\n\n    expense.date = obj.date;\n\n    if (expense.date) {\n      expense.date.hour = obj.date.hour || 12;\n      expense.date.minute = obj.date.minute || 0;\n    }\n    return expense;\n  }\n\n  getDateMoment() {\n    const fmtDate = `${this.date.day}-${this.date.month}-${this.date.year} ${this.date.hour}:${this.date.minute}`;\n    return moment(fmtDate, \"DD-MM-YYYY HH:mm\");\n  }\n}\n\nexport default Expense;\n","import uuid from 'uuid/v4';\n\nclass UUIDGenerator {\n  next() {\n    return uuid();\n  }\n}\n\nexport default UUIDGenerator;\n","import Expense from \"./Expense\";\nimport UUIDGenerator from \"./UUIDGenerator\";\n\nconst nummusPrefix = \"nummus.io\";\nconst expenseKeysKey = nummusPrefix + \".expenseKeys\";\n\nclass ExpenseRepository {\n  localStorage;\n\n  constructor(localStorage) {\n    this.localStorage = localStorage;\n  }\n\n  list() {\n    return this._getExpenseKeys()\n      .map(this.localStorage.getItem.bind(this.localStorage))\n      .map(JSON.parse)\n      .map(Expense.fromJsonObj)\n      .sort((a, b) => -a.getDateMoment().diff(b.getDateMoment(), 'minutes'));\n  }\n\n  _getExpenseKeys() {\n    const arrayJson = this.localStorage.getItem(expenseKeysKey) || '[]';\n    return JSON.parse(arrayJson);\n  }\n\n  add(expense) {\n    let key = `${nummusPrefix}.expenses.${expense.id}`;\n    let expenseKeys = this._getExpenseKeys();\n    this.localStorage.setItem(key, JSON.stringify(expense));\n    expenseKeys.push(key);\n    this.localStorage.setItem(expenseKeysKey, JSON.stringify(expenseKeys));\n  }\n\n  delete(expense) {\n    let key = `${nummusPrefix}.expenses.${expense.id}`;\n    let expenseKeys = this._getExpenseKeys();\n    this.localStorage.removeItem(key);\n    expenseKeys = expenseKeys.filter(savedKey => savedKey !== key);\n    this.localStorage.setItem(expenseKeysKey, JSON.stringify(expenseKeys));\n  }\n\n  amountsByCategory() {\n    return this.list()\n      .reduce((map, expense) => {\n        const currentAmount = map.get(expense.categoryId) || 0;\n        map.set(expense.categoryId, currentAmount + expense.amountCents);\n        return map;\n      }, new Map());\n  }\n\n  dump() {\n    return JSON.stringify(this.list());\n  }\n\n  loadDump(jsonString) {\n    this.list().forEach(this.delete.bind(this));\n    JSON.parse(jsonString)\n      .map(Expense.fromJsonObj)\n      .forEach(this.add.bind(this));\n  }\n\n  findBy(yearMonth) {\n    let yearMonthMoment = yearMonth.toMoment();\n    return this.list()\n      .filter(expense => {\n        let expenseDate = expense.getDateMoment();\n        return expenseDate.month() === yearMonthMoment.month() && expenseDate.year() === yearMonthMoment.year();\n      });\n  }\n\n  userUuid() {\n    let key = nummusPrefix + \".userUuid\";\n    let uuid = this.localStorage.getItem(key) || new UUIDGenerator().next();\n    this.localStorage.setItem(key, uuid);\n\n    return uuid;\n  }\n\n  setUserUuid(uuid) {\n    let key = nummusPrefix + \".userUuid\";\n    this.localStorage.setItem(key, uuid);\n  }\n\n  apiKey() {\n    let key = nummusPrefix + \".apiKey\";\n    return this.localStorage.getItem(key);\n  }\n\n  saveApiKey(apiKey) {\n    let key = nummusPrefix + \".apiKey\";\n    this.localStorage.setItem(key, apiKey);\n  }\n}\n\nexport default ExpenseRepository;\n","class MonthlyBudget {\n  constructor(id, categoryBudgets, month) {\n    this.id = id;\n    this.categoryBudgets = categoryBudgets;\n    this.month = month;\n  }\n\n}\n\nexport default MonthlyBudget;\n","const decimalSeparator = (1.1).toLocaleString().substring(1, 2);\n\nclass CategoryBudget {\n  constructor(id, budgeted, categoryId) {\n    this.id = id;\n    this.budgeted = budgeted;\n    this.categoryId = categoryId;\n  }\n\n  static fromCategory(yearMonth) {\n    return (category) =>\n      new CategoryBudget(`${category.id}_${yearMonth}`, 0, category.id);\n  }\n\n  setBudget(budgeted) {\n    this.budgeted = budgeted;\n  }\n\n  formatedBudgetedAmount() {\n    let cents = this.budgeted % 100;\n    let units = Math.floor(this.budgeted / 100);\n    return `${units}${decimalSeparator}${cents}`;\n  }\n}\n\nexport default CategoryBudget;\n","import moment from 'moment';\nimport MonthlyBudget from \"./MonthlyBudget\";\nimport CategoryBudget from \"./CategoryBudget\";\n\nconst nummusPrefix = \"nummus.io\";\n\nclass BudgetRepository {\n  constructor(localStorage, categoryRepository, dateProvider = currentDateProvider) {\n    this._localStorage = localStorage;\n    this._categoryRepository = categoryRepository;\n    this._dateProvider = dateProvider;\n    this._initializeBudgets();\n  }\n\n  list() {\n    return this.categories;\n  }\n\n  _now() {\n    return this._dateProvider()\n  }\n\n  currentMonthlyBudget() {\n    const yearMonth = this._now().format(\"YYYY_MM\");\n    return this._findOrCreate(yearMonth);\n  }\n\n  findMonth(yearMonth) {\n    return this.listMonths().filter(m => m.yearMonth === yearMonth)[0];\n  }\n\n  _findOrCreate(yearMonth) {\n    const key = `${nummusPrefix}.monthlyBudgets.${yearMonth}`;\n    const found = this._localStorage.getItem(key);\n\n    if (found) {\n      const budget = this._parseObject(found);\n      budget.categoryBudgets = budget.categoryBudgets.map(obj => Object.assign(new CategoryBudget(), obj));\n      return budget;\n    }\n\n    const categoryBudgets = this._categoryRepository.list()\n      .map(CategoryBudget.fromCategory(yearMonth));\n\n    const newBudget = new MonthlyBudget(key, categoryBudgets, yearMonth);\n\n    this._localStorage.setItem(key, JSON.stringify(newBudget));\n    return newBudget;\n  }\n\n  _parseObject(found) {\n    return Object.assign(new MonthlyBudget(), JSON.parse(found));\n  }\n\n  update(monthlyBudget) {\n    const key = `${nummusPrefix}.monthlyBudgets.${monthlyBudget.month}`;\n    this._localStorage.setItem(key, JSON.stringify(monthlyBudget));\n  }\n\n  listMonths() {\n    return Object.keys(this._localStorage)\n      .filter(k => k.startsWith(\"nummus.io.monthlyBudgets\"))\n      .map(k => this._parseObject(this._localStorage.getItem(k)))\n      .map(budget => new BudgetRepository.YearMonth(budget.month, this._dateProvider))\n      .sort((month1, month2) => -month1.toMoment().diff(month2.toMoment(), 'minutes'))\n      .reverse()\n  }\n\n  currentMonth() {\n    return this.listMonths().filter(m => m.is_current)[0];\n  }\n\n  _initializeBudgets() {\n    this._findOrCreate(this._now().add(1, 'month').format(\"YYYY_MM\"));\n    this._findOrCreate(this._now().format(\"YYYY_MM\"));\n    this._findOrCreate(this._now().subtract(1, 'month').format(\"YYYY_MM\"));\n  }\n\n  static YearMonth = class {\n    constructor(yearMonth, dateProvider = currentDateProvider) {\n      this.is_current = dateProvider().format(\"YYYY_MM\") === yearMonth;\n      this.yearMonth = yearMonth;\n    }\n\n    formatted() {\n      return this.toMoment().format(\"MMM YY\");\n    }\n\n    toMoment() {\n      return moment(this.yearMonth, \"YYYY_MM\")\n    }\n\n  }\n}\n\nfunction currentDateProvider() {\n  return moment();\n}\n\nexport default BudgetRepository;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ExpenseRepository from \"../../domain/ExpenseRepository\";\nimport AmountFormatter from \"../AmountFormatter\";\nimport BudgetRepository from \"../../domain/BudgetRepository\";\n\n\nclass ExpenseHistory extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      expenses: this.props.expenses\n    };\n  }\n\n  static propTypes = {\n    expenseRepository: PropTypes.instanceOf(ExpenseRepository),\n    selectedMonth: PropTypes.instanceOf(BudgetRepository.YearMonth),\n    expenses: PropTypes.array,\n    categoriesById: PropTypes.object,\n  };\n\n  makeItem(expense, index) {\n    let category = this.props.categoriesById.get(expense.categoryId);\n    const formattedAmount = AmountFormatter.fromCents(expense.amountCents).formatted();\n    return (<tr className=\"expense-row\" key={index}>\n      <td>{expense.formattedDate()}</td>\n      <td>€{formattedAmount}</td>\n      <td>{category.name}</td>\n      <td>\n        <input\n          type='button'\n          value='Delete'\n          className='delete-expense alert button expanded'\n          onClick={this.deleteExpense(expense).bind(this)}\n        />\n      </td>\n    </tr>)\n  }\n\n  render() {\n    const rows = this.state.expenses.map(this.makeItem.bind(this));\n    return (<table>\n      <tbody>\n        {rows}\n      </tbody>\n    </table>);\n  }\n\n  deleteExpense(expense) {\n    return () => {\n      this.props.expenseRepository.delete(expense);\n      this.setState({ expenses: this.props.expenseRepository.findBy(this.props.selectedMonth)});\n    }\n  }\n}\n\nexport default ExpenseHistory\n","class Category {\n  constructor(id, name) {\n    this.name = name;\n    this.id = id;\n  }\n\n}\n\nexport default Category;\n","import Category from \"./Category\";\n\nclass CategoryRepository {\n\n  constructor() {\n    const categories = [\n      'fun',\n      'groceries',\n      'travel',\n      'dining out',\n      'rent',\n      'home expense',\n      'sports',\n      'transportation',\n      'lunch @ work',\n    ].map((name, index) => {\n      return new Category(index, name)\n    });\n\n    this.categories = categories.sort((a, b) => a.name.localeCompare(b.name));\n  }\n\n  list() {\n    return this.categories;\n  }\n\n  categoriesById() {\n    return this.list().reduce((map, v) => map.set(v.id, v), new Map())\n  }\n}\n\nexport default CategoryRepository;\n","class AutoIncrementIdGenerator {\n  id;\n\n  constructor() {\n    this.id = 0;\n  }\n\n  next() {\n    this.id++;\n    return this.id;\n  }\n}\n\nexport default AutoIncrementIdGenerator;\n","import React, {Component} from 'react';\nimport '../../../css/App.css';\nimport '../../../css/index.css';\nimport ExpenseForm from \"./ExpenseForm\";\nimport ExpenseHistory from \"./ExpenseHistory\";\nimport Expense from \"../../domain/Expense\";\nimport ExpenseRepository from \"../../domain/ExpenseRepository\";\nimport CategoryRepository from \"../../domain/CategoryRepository\";\nimport AutoIncrementIdGenerator from \"../../domain/AutoIncrementIdGenerator\";\nimport PropTypes from 'prop-types';\nimport BudgetRepository from \"../../domain/BudgetRepository\";\n\nclass ExpensesDash extends Component {\n\n  constructor(props) {\n    super(props);\n    this.categories = this.props.categoryRepository.list();\n    this.categoriesById = this.props.categoryRepository.categoriesById();\n    this.expenseRepository = this.props.expenseRepository || new ExpenseRepository(localStorage);\n    this.state = {\n      expenses: this.expenseRepository.findBy(this.props.selectedMonth)\n    };\n  }\n\n  static defaultProps = {\n    idGenerator: new AutoIncrementIdGenerator(),\n  };\n\n  static propTypes = {\n    idGenerator: PropTypes.shape({\n      next: PropTypes.func,\n    }),\n    categoryRepository: PropTypes.instanceOf(CategoryRepository),\n    expenseRepository: PropTypes.instanceOf(ExpenseRepository),\n    selectedMonth: PropTypes.instanceOf(BudgetRepository.YearMonth),\n  };\n\n\n  render() {\n    return (\n      <div className=\"grid-x grid-padding-x\">\n          <div className=\"large-6 medium-6 cell\">\n            <ExpenseForm\n                categories={this.categories}\n                onSubmit={this.expenseAdded.bind(this)}\n            />\n          </div>\n          <div className=\"large-6 medium-6 cell\">\n            <ExpenseHistory\n                categoriesById={this.categoriesById}\n                expenses={this.state.expenses}\n                expenseRepository={this.expenseRepository}\n                selectedMonth={this.props.selectedMonth}\n                ref={(node) => this._expenseHistory = node}\n            />\n          </div>\n      </div>\n    );\n  }\n\n  expenseAdded(event, state) {\n    event.preventDefault();\n\n    const nextId = this.props.idGenerator.next();\n    let expense = Expense.createFromState(nextId, state);\n    this.expenseRepository.add(expense);\n\n    this._expenseHistory.setState({\n      expenses: this.expenseRepository.findBy(this.props.selectedMonth)\n    });\n\n    this.setState({\n      expenses: this.expenseRepository.findBy(this.props.selectedMonth)\n    });\n  }\n}\n\nexport default ExpensesDash;\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport AmountInput from \"./AmountInput\";\nimport CategoryBudget from \"../../domain/CategoryBudget\";\n\nconst unit = x => x;\nclass BudgetInput extends Component {\n\n  // constructor(props) {\n  //   super(props);\n  // }\n\n  static propTypes = {\n    categoryBudget: PropTypes.instanceOf(CategoryBudget),\n    budgetUpdated: PropTypes.func,\n  };\n\n  static defaultProps = {\n    budgetUpdated: () => undefined\n  };\n\n  updateBudget(newAmount) {\n    this.props.categoryBudget.setBudget(newAmount);\n    this.props.budgetUpdated();\n  }\n\n  render() {\n    return (\n      <div className=\"input-group budget-input-group\">\n        <span className=\"input-group-label\">€</span>\n        <AmountInput\n          ref={node => this._amountInput = node}\n          initialValue={this.props.categoryBudget.budgeted}\n          onDigit={unit}\n          onAmountChanged={this.updateBudget.bind(this)}\n          inputClass='input-group-field budget-input'\n        />\n      </div>\n    );\n  }\n}\n\nexport default BudgetInput\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport CategoryRepository from \"../../domain/CategoryRepository\";\nimport BudgetRepository from \"../../domain/BudgetRepository\";\nimport BudgetInput from \"./BudgetInput\";\nimport AmountFormatter from \"../AmountFormatter\";\n\nclass BudgetDash extends Component {\n  static propTypes = {\n    budgetRepository: PropTypes.instanceOf(BudgetRepository),\n    categoryRepository: PropTypes.instanceOf(CategoryRepository),\n    amountSpentByCategory: PropTypes.instanceOf(Map),\n  };\n\n  constructor(props) {\n    super(props);\n    this.categoriesById = this.props.categoryRepository.categoriesById();\n    this._budgetInputs = [];\n    this._budget = this.props.budgetRepository.currentMonthlyBudget();\n    this.remainingAmounts = this._budget.categoryBudgets.reduce((remainingAmounts, budget) => {\n      const spent = this.props.amountSpentByCategory.get(budget.categoryId) || 0;\n      const remaining = budget.budgeted - spent;\n      remainingAmounts.set(budget.categoryId, AmountFormatter.fromCents(remaining).formatted());\n      return remainingAmounts;\n    }, new Map());\n    this.state = {\n      remainingAmounts: this.remainingAmounts\n    };\n  }\n\n  budgetUpdated(categoryBudget) {\n    return () => {\n      const spent = this.props.amountSpentByCategory.get(categoryBudget.categoryId) || 0;\n      const remaining = categoryBudget.budgeted - spent;\n      this.state.remainingAmounts.set(categoryBudget.categoryId, AmountFormatter.fromCents(remaining).formatted());\n      this.setState({\n        remainingAmounts: this.state.remainingAmounts\n      });\n      this.props.budgetRepository.update(this._budget);\n    }\n  }\n\n  remainingAmount(categoryBudget) {\n    const spent = this.props.amountSpentByCategory.get(categoryBudget.categoryId) || 0;\n    const remaining = categoryBudget.budgeted - spent;\n    return AmountFormatter.fromCents(remaining).formatted();\n  }\n\n  render() {\n    const tbody = this._budget.categoryBudgets.map(categoryBudget =>\n      <tr key={categoryBudget.id}>\n        <td>{this.categoriesById.get(categoryBudget.categoryId).name}</td>\n        <td>\n          <BudgetInput\n            ref={node => this._budgetInputs.push(node)}\n            categoryBudget={categoryBudget}\n            budgetUpdated={this.budgetUpdated(categoryBudget).bind(this)}\n          />\n        </td>\n        <td>\n          €{this.getAmount(categoryBudget)}\n        </td>\n      </tr>\n    );\n    return (\n      <div>\n        <h1>Budget dash</h1>\n        <table>\n          <thead>\n            <tr className='category-budget'>\n              <th>Category</th>\n              <th>Budgeted</th>\n              <th>Available</th>\n            </tr>\n          </thead>\n          <tbody>\n            {tbody}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n\n  getAmount(categoryBudget) {\n    return this.state.remainingAmounts.get(categoryBudget.categoryId);\n  }\n}\n\nexport default BudgetDash;\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport BudgetRepository from \"../../domain/BudgetRepository\";\n\nclass MonthSelector extends Component {\n  static propTypes = {\n    budgetRepository: PropTypes.instanceOf(BudgetRepository),\n    onMonthChanged: PropTypes.func,\n  };\n\n  monthChanged(event) {\n    this.props.onMonthChanged(this.props.budgetRepository.findMonth(event.target.value));\n  }\n\n  render() {\n    let months = this.props.budgetRepository.listMonths();\n    let currentMonth = this.props.budgetRepository.currentMonth();\n    let options = months.map(month => {\n      return <option\n        value={month.yearMonth}\n        key={month.yearMonth}>\n        {month.formatted()}\n      </option>\n    });\n    return (\n      <div>\n        <select\n          defaultValue={currentMonth.yearMonth}\n          onChange={this.monthChanged.bind(this)}>\n          {options}\n        </select>\n      </div>\n    );\n  }\n\n}\n\nexport default MonthSelector;\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport ExpenseRepository from \"../../domain/ExpenseRepository\";\n\nlet API_ENDPOINT = \"https://mgdd4jfbph.execute-api.us-east-1.amazonaws.com/prod\";\n\nclass AdminDash extends Component {\n  static propTypes = {\n    expenseRepository: PropTypes.instanceOf(ExpenseRepository),\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.state.dump = this.props.expenseRepository.dump();\n    this.state.uploadCompleted = \"\";\n    this.state.apiKey = this.props.expenseRepository.apiKey();\n    this.state.userUuid = this.props.expenseRepository.userUuid();\n  }\n\n  loadDump() {\n    this.props.expenseRepository.loadDump(this.state.dump);\n  }\n\n  textAreaChanged(event) {\n    this.setState({\n      dump: event.target.value\n    });\n  }\n\n  apiKeyChanged(event) {\n    this.setState({\n      apiKey: event.target.value\n    });\n    this.props.expenseRepository.saveApiKey(event.target.value);\n  }\n\n  uuidChanged(event) {\n    this.setState({\n      userUuid: event.target.value\n    });\n    this.props.expenseRepository.setUserUuid(event.target.value);\n  }\n\n  uploadExpenses() {\n    let component = this;\n    let promise = fetch(\n      `${API_ENDPOINT}/sync/${this.userUuid}`,\n      {\n        method: 'POST',\n        mode: 'cors',\n        headers: {\n          'x-api-key': this.state.apiKey,\n        },\n        body: this.state.dump,\n      }\n    );\n\n    promise.then(response => response.json())\n      .then(response => component.setState({\n          uploadCompleted: \"Upload completed: \" + JSON.stringify(response),\n        }\n      ))\n  }\n\n  downloadExpenses() {\n    let component = this;\n    let promise = fetch(\n      `${API_ENDPOINT}/sync/${this.userUuid}`,\n      {\n        method: 'GET',\n        mode: 'cors',\n        headers: {\n          'x-api-key': this.state.apiKey,\n        }\n      }\n    );\n\n    promise\n      .then(response => response.json())\n      .then(json => {\n        component.setState({\n          dump: JSON.stringify(json),\n          downloadCompleted: \"Download completed\",\n        });\n      });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Admin</h1>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"apiKey\">Api key</label>\n          <input value={this.state.apiKey}\n                 className=\"form-control\"\n                 type=\"text\"\n                 id=\"apiKey\"\n                 placeholder=\"Enter api key\"\n                 onChange={this.apiKeyChanged.bind(this)}/>\n\n          <label htmlFor=\"userUuid\">User uuid</label>\n          <input value={this.state.userUuid}\n                 className=\"form-control\"\n                 type=\"text\"\n                 id=\"userUuid\"\n                 placeholder=\"Enter user UUID\"\n                 onChange={this.uuidChanged.bind(this)}/>\n        </div>\n\n        <label>\n\n        </label>\n        <hr/>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"expensesData\">Expenses dump</label>\n          <textarea\n            id=\"expensesData\"\n            value={this.state.dump}\n            className=\"form-control\"\n            onChange={this.textAreaChanged.bind(this)}\n          />\n        </div>\n\n        <button\n          className='expense-form-submit button'\n          onClick={this.loadDump.bind(this)}>\n          Load dump\n        </button>\n\n        <hr/>\n        <button\n          className='expense-form-submit button'\n          onClick={this.uploadExpenses.bind(this)}>\n          Upload expenses\n        </button>\n\n        <div className={this.state.uploadCompleted ? \"\" : \"hide\"}>\n          <div className=\"callout success\">\n            <p>{this.state.uploadCompleted}</p>\n          </div>\n        </div>\n\n        <hr/>\n        <button\n          className='expense-form-submit button'\n          onClick={this.downloadExpenses.bind(this)}>\n          Download expenses\n        </button>\n\n        <div className={this.state.downloadCompleted ? \"\" : \"hide\"}>\n          <div className=\"callout success\">\n            <p>{this.state.downloadCompleted}</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  getAmount(categoryBudget) {\n    return this.state.remainingAmounts.get(categoryBudget.categoryId);\n  }\n}\n\nexport default AdminDash;\n","import React, {Component} from 'react';\nimport ExpensesDash from \"./ExpensesDash\";\nimport BudgetDash from \"./BudgetDash\";\nimport MonthSelector from \"./MonthSelector\";\nimport AdminDash from \"./AdminDash\";\nimport {BrowserRouter as Router, Link, Route} from 'react-router-dom'\nimport UUIDGenerator from \"../../domain/UUIDGenerator\";\nimport CategoryRepository from \"../../domain/CategoryRepository\";\nimport BudgetRepository from \"../../domain/BudgetRepository\";\nimport ExpenseRepository from \"../../domain/ExpenseRepository\";\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.categoryRepository = new CategoryRepository();\n    this.budgetRepository = new BudgetRepository(localStorage, this.categoryRepository);\n    this.expenseRepository = new ExpenseRepository(localStorage);\n\n    this.state = {\n      selectedMonth: this.budgetRepository.currentMonth()\n    }\n  }\n\n  makeExpensesDash() {\n    return <ExpensesDash\n      idGenerator={new UUIDGenerator()}\n      categoryRepository={this.categoryRepository}\n      selectedMonth={this.state.selectedMonth}\n    />;\n  }\n\n  makeBudgetDash() {\n    return <BudgetDash\n      categoryRepository={this.categoryRepository}\n      budgetRepository={this.budgetRepository}\n      amountSpentByCategory={this.expenseRepository.amountsByCategory()}\n    />\n  }\n\n  makeAdminDash() {\n    return <AdminDash\n      expenseRepository={this.expenseRepository}\n    />\n  }\n\n  monthChanged(month) {\n    this.setState({\n      selectedMonth: month\n    });\n  }\n\n  render() {\n    return (\n      <Router>\n        <div>\n          <div className=\"top-bar\" id=\"responsive-menu\">\n            <div className=\"top-bar-left\">\n              <ul className=\"dropdown menu\" data-dropdown-menu>\n                <li className=\"menu-text\"><Link to=\"/nummus/\">Nummus</Link></li>\n                <li>\n                  <Link to=\"/nummus/budget/\">Budget</Link>\n                </li>\n                <li>\n                  <Link to=\"/nummus/\">Expense</Link>\n                </li>\n                <li>\n                  <MonthSelector budgetRepository={this.budgetRepository} onMonthChanged={this.monthChanged.bind(this)}/>\n                </li>\n              </ul>\n            </div>\n          </div>\n          <div className=\"grid-container main-container\">\n            <Route exact path=\"/nummus/\" component={this.makeExpensesDash.bind(this)}/>\n            <Route path=\"/nummus/budget/\" component={this.makeBudgetDash.bind(this)}/>\n            <Route path=\"/nummus/admin/\" component={this.makeAdminDash.bind(this)}/>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  const shouldRegister = process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator;\n  // const shouldRegister = true;\n  if (shouldRegister) {\n    window.addEventListener(\"beforeinstallprompt\", function(e) {\n      // log the platforms provided as options in an install prompt\n      console.log(e.platforms); // e.g., [\"web\", \"android\", \"windows\"]\n      e.userChoice.then(function(outcome) {\n        console.log(outcome); // either \"accepted\" or \"dismissed\"\n      }, () => undefined);\n    });\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './main/css/index.css';\nimport App from './main/js/application/components/App';\nimport registerServiceWorker from './main/js/registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n// registerServiceWorker();\n"],"sourceRoot":""}